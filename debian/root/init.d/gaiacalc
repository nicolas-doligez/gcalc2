#!/usr/bin/env -S SYSTEMCTL_SKIP_REDIRECT="1" /lib/init/init-d-script
### BEGIN INIT INFO
# Provides:          atd
# Required-Start:    $syslog $time $remote_fs
# Required-Stop:     $syslog $time $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: run at jobs
# Description:       Debian init script to start the daemon
#                    running at jobs.
### END INIT INFO

#IMPORTANT NOTE
#we define SYSTEMCTL_SKIP_REDIRECT env variable on the shebang line
#it will be passed to init-d-script
#this will avoid the forced switched to LSB system
#see in /lib/lsb/init-functions which loads /lib/lsb/init-functions.d/40-systemd
#this use of SYSTEMCTL_SKIP_REDIRECT is discouraged
#see https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=910478
#but we want to modify the minimum to get a correct daemon
#to be able to use /etc/init.d/gaiacalc start/stop

DAEMON=/usr/local/bin/gaiacalc
DAEMON_ARGS="--public --tcpport 80 --log /var/log/gaiacalc.log"
START_ARGS="--background"

#we need to override the stop command
#because our daemon is launched with python
#therefore the program name is python and not gaiacalc
#and then the start-stop-daemon filters will not find it
#by default, the filters look at pidfile AND command_name AND daemon path
#we only need pidfile because our python code will generate it correctly
#original command in start-stop-daemon is :
#do_stop_cmd() {
#start-stop-daemon --stop --quiet --oknodo --retry=TERM/30/KILL/5 \
#            $STOP_ARGS \
#            ${PIDFILE:+--pidfile ${PIDFILE}} --name ${COMMAND_NAME} --exec $DAEMON

do_stop_cmd_override() {
	start-stop-daemon --stop --quiet --oknodo --pidfile /var/run/gaiacalc.pid
	rm -f /var/run/gaiacalc.pid
}
